from src.utils.areas import AreasHH
from src.utils.utilites import user_name, exit_program
from src.utils.vacancies import VacHH

if __name__ == '__main__':

    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ AreasHH, –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ–≥–∏–æ–Ω "–†–æ—Å—Å–∏—è".
    area_hh = AreasHH()
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ json-—Ñ–∞–π–ª.
    area_hh.request_to_api()

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
    # –ó–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    name = input('\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–º–æ–∂–µ—Ç –í–∞–º –∏–∑—É—á–∏—Ç—å –∏–º–µ—é—â–∏–µ—Å—è –≤–∞–∫–∞–Ω—Å–∏–∏,\n'
                 '–ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º–∏ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏,\n'
                 '—Ä–∞–∑–º–µ—â—ë–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–∏—Å–∞—Ö HeadHunter (hh.ru) –∏ SuperJob (superjob.ru).\n\n'
                 '–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç? ').strip()
    # –í—ã–≤–æ–¥ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    name = user_name(name)

    # –í—ã–±–∏—Ä–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã
    num_vak = input(f'\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n'
                    f'–î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ:\n'
                    f'   ‚úÖ HeadHunter (hh.ru)........ - 1\n'
                    f'   ‚úÖ SuperJob (superjob.ru).... - 2\n'
                    f'   ‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã - 0.\n\n'
                    f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')
    all_ok = False
    while not all_ok:
        try:
            match int(num_vak):
                case 1:
                    print(f'\n{name}, –í—ã –≤—ã–±—Ä–∞–ª–∏ HeadHunter (hh.ru). üëå\n')
                case 2:
                    print(f'\n{name}, –í—ã –≤—ã–±—Ä–∞–ª–∏ SuperJob (superjob.ru). üëå\n')
                case 0:
                    exit_program(name)  # –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        except ValueError:
            num_vak = input(f'\n‚ùó{name}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ')
        else:
            num_vak = int(num_vak)
            all_ok = True

        if num_vak == 1:
            # –ë–ª–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏ HeadHunter (hh.ru).
            # –í—ã–±–∏—Ä–∞–µ–º id —Ä–µ–≥–∏–æ–Ω–∞/–Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–∫–∞–Ω—Å–∏—è—Ö –Ω–∞ hh.ru
            all_ok = False
            while not all_ok:
                # –†–µ–≥–∏–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
                area_vak = input(
                    f'\n–î–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π –≤–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ –∏–ª–∏ –≥–æ—Ä–æ–¥–∞ –†–æ—Å—Å–∏–∏\n'
                    f'–±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∫—Ä–∞—Ç–∫–∏—Ö –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–π "–≥.", "—Å.", "—Ö." –∏ —Ç.–¥., –Ω–∞–ø—Ä–∏–º–µ—Ä:\n'
                    f'–ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É.\n'
                    f'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞/–Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞: ').strip().lower()

                # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ AreasHH —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–µ–≥–∏–æ–Ω–∞, —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
                area_hh = AreasHH(area_vak)

                # –ü–æ–ª—É—á–∞–µ–º id —Ä–µ–≥–∏–æ–Ω–∞/–Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
                area_id = area_hh.extract_area_id()

                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, —Ä–µ–≥–∏–æ–Ω/–Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç
                if area_id == 113:
                    num_area = input(f'\n–ú—ã –Ω–µ –Ω–∞—à–ª–∏, —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ —Ä–µ–≥–∏–æ–Ω/–Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, –≤ –∏–º–µ—é—â–µ–π—Å—è –±–∞–∑–µ.\n'
                                     f'–ú–æ–∂–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏, –∏–º–µ—é—â–∏–µ—Å—è –≤ –†–æ—Å—Å–∏–∏.\n'
                                     f'–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥:\n'
                                     f'   ‚úÖ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω/–Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç - 1\n'
                                     f'   ‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –†–æ—Å—Å–∏–∏............ - 2\n'
                                     f'   ‚ùå –ó–∞–≤–µ—Ä–∏—à—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã............. - 0\n\n'
                                     f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')

                    # –í—ã–±–æ—Ä —Ä–∞–∑–¥–µ–ª–æ–≤ –º–µ–Ω—é
                    all_ok_area = False
                    while not all_ok_area:
                        try:
                            match int(num_area):
                                case 1:
                                    print(f'\n{name}, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω/–Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç.\n')
                                    all_ok_area = True
                                case 2:
                                    print(f'\n{name}, –º—ã –ø–æ–¥–±–µ—Ä—ë–º –¥–ª—è –í–∞—Å –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n')
                                    all_ok_area = True
                                    all_ok = True
                                case 0:
                                    exit_program(name)  # –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                        except ValueError:
                            num_area = input(f'\n‚ùó{name}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ')
                else:
                    all_ok = True

            # –ë–ª–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
            name_vak = input(
                f'\n{name}, –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π.\n'
                f'–ù–∞–ø—Ä–∏–º–µ—Ä: –≤–æ–¥–∏—Ç–µ–ª—å, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, python, java –∏ —Ç.–¥.\n\n'
                f'–î–æ–ª–∂–Ω–æ—Å—Ç—å: ').lower()

            only_with_salary = False  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π
            salary_vak = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:\n'
                               '   ‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ —Ç–æ–ª—å–∫–æ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∑–∞—Ä–ø–ª–∞—Ç—ã - 1\n'
                               '   ‚ùé –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –≤–∞–∫–∞–Ω—Å–∏–∏.............. - 2\n'
                               '   ‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã................... - 0\n\n'
                               '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')
            all_ok = False
            while not all_ok:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                try:
                    match int(salary_vak):
                        case 1:
                            print(f'\nOK, {name}.\n')
                            only_with_salary = True
                            all_ok = True
                        case 2:
                            print(f'\nOK, {name}.\n')
                            all_ok = True
                        case 0:
                            exit_program(name)  # –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                except ValueError:
                    salary_vak = input(f'\n‚ùó{name}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ')

            salary = 0  # –†–∞–∑–º–µ—Ä –∏—Å–∫–æ–º–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã
            if only_with_salary:
                salary = input('\n–£–∫–∞–∂–∏—Ç–µ –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã (–≤ —Ä—É–±–ª—è—Ö): ')
                all_ok = False
                while not all_ok:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                    try:
                        salary = int(salary)
                        if salary <= 0:
                            salary = 0
                        all_ok = True
                    except ValueError:
                        salary = input(f'\n‚ùó{name}, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: ')

            sort_method = 1  # –ú–µ—Ç–æ–¥ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: 1 - –ø–æ –¥–∞—Ç–∞–º, 2 - –ø–æ —Ä–∞–∑–º–µ—Ä—É –∑–∞—Ä–ø–ª–∞—Ç—ã
            if only_with_salary:
                sort_method = input('\n–ö–∞–∫ –Ω–∞–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏?\n'
                                    '   ‚úÖ –ü–æ –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç–µ (–æ—Ç –±–æ–ª—å—à–µ–π –∫ –º–µ–Ω—å—à–µ–π)  - 1\n'
                                    '   ‚ùé –ü–æ –¥–∞—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–æ—Ç "—Å–≤–µ–∂–∏—Ö" –∫ "—Å—Ç–∞—Ä—ã–º") - 2\n'
                                    '   ‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã................. - 0\n\n'
                                    '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')
                all_ok = False
                while not all_ok:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                    try:
                        match int(sort_method):
                            case 1:
                                sort_method = 1
                                all_ok = True
                            case 2:
                                sort_method = 2
                                all_ok = True
                            case 0:
                                exit_program(name)  # –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                    except ValueError:
                        sort_method = input(f'\n‚ùó{name}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ')

            all_ok = False
            while not all_ok:
                # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ VacHH - –≤–∞–∫–∞–Ω—Å–∏–∏ —Å hh.ru.
                if only_with_salary or salary != 0:
                    prof_hh = VacHH(position=name_vak, area=area_id, only_with_salary=only_with_salary, salary=salary,
                                    sort_method=sort_method)
                else:
                    prof_hh = VacHH(position=name_vak, area=area_id)

                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
                # —Å–æ—Ö—Ä–∞–Ω—è—è –∏—Ö –≤ json-—Ñ–∞–π–ª—ã.
                prof_hh.vacancies_all()
                if prof_hh.size_dict == 0:
                    commands_prg = input('\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:\n'
                                         '   ‚úÖ –í–≤–µ—Å—Ç–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ - 1\n'
                                         '   ‚ùå –ó–∞–≤–µ—Ä–∏—à—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã........... - 0\n\n'
                                         '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                    try:
                        match int(commands_prg):
                            case 1:
                                name_vak = input(f'\n{name}, –≤–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ').lower()
                            case 0:
                                exit_program(name)  # –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                    except ValueError:
                        commands_prg = input(f'\n‚ùó{name}, –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑: ')
                else:
                    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞–∫–∞–Ω—Å–∏—è—Ö
                    count_vak = input(f'–ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö '
                                      f'({prof_hh.size_dict} —à—Ç.) –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —É–≤–∏–¥–µ—Ç—å? ')

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                    if not count_vak.isdigit() or int(count_vak) > prof_hh.size_dict:
                        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ (–≤—Å–µ).
                        count_vak = prof_hh.size_dict
                        print(f'\n–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, '
                              f'–ø–æ—ç—Ç–æ–º—É –º—ã –ø–æ–∫–∞–∂–µ–º –í–∞–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ ({count_vak} —à—Ç.).\n')
                        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                        prof_hh.vacancies_print(count_vak)
                        all_ok = True
                    else:
                        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π, –∑–∞–¥–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –¥–ª—è –≤—ã–≤–æ–¥–∞.
                        count_vak = int(count_vak)
                        print(f'\n–ù–∏–∂–µ –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤–∞–∫–∞–Ω—Å–∏–∏, '
                              f'–∫–æ—Ç–æ—Ä—ã–µ –º—ã –Ω–∞—à–ª–∏ –ø–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É ({count_vak} —à—Ç.).\n')
                        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                        prof_hh.vacancies_print(count_vak)
                        all_ok = True
    else:
        # –ë–ª–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏ SuperJob (superjob.ru).
        pass
